# The initial access point for the controller
con_pass: debpi
gateway_ip: 192.168.96.12

# Define a user account for Ansible to use
user_name: ansible
ansible_pass: ansibian

# Networking setup for DHCP
dhcp_subnet: 192.168.1.0
dhcp_netmask: 255.255.255.0
dhcp_range_lower: 192.168.1.101
dhcp_range_upper: 192.168.1.254
dhcp_broadcast: 192.168.1.255
dhcp_router: 192.168.1.100
dhcp_gateway: 192.168.1.1
mac_address: ""

base_packages:
- isc-dhcp-server
- bash-completion
- vim
- python3-pip

crio_version: '1.21'
crio_package: "Debian_10"
crio_apt_repos:
- "deb http://deb.debian.org/debian buster-backports main"
- "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_package }}/ /"
- "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ crio_version }}/{{ crio_package }}/ /"
crio_apt_keys:
- "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}/{{ crio_package }}/Release.key"
- "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_package }}/Release.key"
crio_packages:
- cri-o
- cri-o-runc
use_distro_runc: false

k8s_cluster_name: DebpiK8s
k8s_version: 1.21.3
k8s_apt_repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
k8s_apt_key: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
k8s_packages:
- kubelet={{ k8s_version }}-00
- kubeadm={{ k8s_version }}-00
- kubectl={{ k8s_version }}-00

helm_release: https://get.helm.sh/helm-v3.6.2-linux-amd64.tar.gz
helm_checksum: sha256:https://get.helm.sh/helm-v3.6.2-linux-amd64.tar.gz.sha256sum
helm_repos:
- name: kubernetes-dashboard
  url: https://kubernetes.github.io/dashboard/
- name: bitnami
  url: https://charts.bitnami.com/bitnami
helm_charts:
- release_name: k8s-dashboard
  ref: kubernetes-dashboard/kubernetes-dashboard
  namespace: k8s-dashboard
  # values: "{{ lookup('template', 'files/k8s-dash-values.yaml') | from_yaml }}"
  settings:
    service.type: NodePort
    ingress.enabled: true
    metricsScraper.enabled: true
    metrics-server.enabled: true
# - release_name: redis-k8s
#   ref: bitnami/redis
#   namespace: redis
#   settings:
#     global.redis.password: password
#     master.service.type: NodePort
#     replica.replicaCount: 3
#     master.service.port: 6380
#     master.containerPort: 6380


#   release_name: kubernetes-dashboard
#   release_namespace: kubernetes-dashboard


k8s_pod_network:
  cni: "calico"
  pod_subnet: '10.244.0.0/16'